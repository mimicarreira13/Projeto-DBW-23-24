import mongoose from"mongoose";import passportLocalMongoose from"passport-local-mongoose";const userSchema=new mongoose.Schema({email:{type:String,required:!0,unique:!0},imagem:String,pontuacoes:{pontGalo:{type:Number,default:0},pontMemoria:{type:Number,default:0},pontForca:{type:Number,default:0}}});userSchema.plugin(passportLocalMongoose);const userModel=mongoose.model("User",userSchema);export function getUserModel(){return userModel}export async function registerUser(data){console.log("registerUser");try{const user=new userModel({email:data.email,username:data.username});return await userModel.register(user,data.password),!0}catch(error){return console.log(error),!1}}export async function getUserById(id){console.log("getUserById");const queryResult={success:!1,result:null,error:null};try{queryResult.result=await userModel.findById(id).exec(),queryResult.result&&(queryResult.success=!0)}catch(error){console.error(error),queryResult.error=error}return queryResult}export async function updateImagembyID(id,desc){console.log("updateImagembyID");const queryResult={success:!1,result:null,error:null};try{const oldUserQueryResult=await getUserById(id);1==oldUserQueryResult.success&&(oldUserQueryResult.result.imagem=desc,oldUserQueryResult.result.save(),queryResult.success=!0)}catch(error){console.error(error),queryResult.error=error}return queryResult}export async function pontuacaoID(id,desc){console.log("pontuacaoID");const queryResult={success:!1,result:null,error:null};try{const oldUserQueryResult=await getUserById(id);1==oldUserQueryResult.success&&(oldUserQueryResult.result.pontuacao=desc,oldUserQueryResult.result.save(),queryResult.success=!0)}catch(error){console.error(error),queryResult.error=error}return queryResult}